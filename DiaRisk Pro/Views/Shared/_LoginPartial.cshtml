@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    @*<li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>*@

        <div class="dropdown">
            <a href="#" class="nav-link leading-none" data-toggle="dropdown"
               aria-expanded="false">
                <span class="ml-2 d-none d-lg-block">
                <span class="user_name">@User.Identity?.Name!</span>
                </span>
            </a>
            <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow vivify flipInY"
                 style="will-change: transform;">

            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">
                <i class="dropdown-icon fe fe-settings"></i> Settings
            </a>
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
            </div>
        </div>

}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}

